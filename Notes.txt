
Convert text string to and back By J~Net

jnet.djaufiefexx6vsivc7auwithqdcbmjoftspe7kleg3ivuauk6yrmkkyd.onion

https://github.com/jamieduk/BASH-Text-Encoders

https://jnet.forumotion.com


Text to Binary

 ./Text-to-Binary.sh "visit jnet.djaufiefexx6vsivc7auwithqdcbmjoftspe7kleg3ivuauk6yrmkkyd.onion"
 

bashrc / zshrc function


function txt2bin(){
input="$1"
if [ -z "$input" ]; then
  read -p "Enter text to convert to binary: " input
fi
# Convert each character of the string to binary
echo -n "$input" | perl -lpe '$_=unpack"B*"'
}


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Binary to Text

./Binary-to-Text.sh


bashrc / zshrc function


function bin2txt() {
  input="$1"
  if [ -z "$input" ]; then
    read -p "Enter binary string to convert to text: " input
  fi

  # Validate input: Ensure only binary characters and length divisible by 8
  if [[ ! "$input" =~ ^[01]+$ ]] || (( ${#input} % 8 != 0 )); then
    echo "Error: Input must be a binary string with a length divisible by 8."
    return 1  # Use 'return' instead of 'exit'
  fi

  # Convert binary to text
  echo "$input" | perl -lpe '$_=pack"B*",$_'
}


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Text to Base64

./Text-to-Base64.sh "Visit jnet.djaufiefexx6vsivc7auwithqdcbmjoftspe7kleg3ivuauk6yrmkkyd.onion"


bashrc / zshrc function


function txt2b64(){
input="$1"
if [ -z "$input" ]; then
  read -p "Enter text to encode in Base64: " input
fi
echo -n "$input" | base64
echo ""
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Base64 to Text

./Base64-to-Text.sh "VmlzaXQgam5ldC5kamF1ZmllZmV4eDZ2c2l2YzdhdXdpdGhxZGNibWpvZnRzcGU3a2xlZzNpdnVhdWs2eXJta2t5ZC5vbmlvbg=="


bashrc / zshrc function


function b642txt(){
input="$1"
if [ -z "$input" ]; then
  read -p "Enter Base64 string to decode: " input
fi
# Decode Base64 string and handle errors gracefully
if echo "$input" | base64 -d &>/dev/null; then
  echo "$input" | base64 -d
  echo ""
else
  echo "Error: Input is not a valid Base64 string."
fi
}


